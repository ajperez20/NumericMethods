=============================================
GUÍA RÁPIDA DE OCTAVE - FUNCIONES Y OPERADORES
=============================================

1. FUNCIONES MATEMÁTICAS BÁSICAS
---------------------------------
- Trigonométricas:
  sin(x)    % Seno (radianes)
  cos(x)    % Coseno
  tan(x)    % Tangente
  asin(x)   % Arcoseno
  acos(x)   % Arcocoseno
  atan(x)   % Arcotangente

- Hiperbólicas:
  sinh(x)   % Seno hiperbólico
  cosh(x)   % Coseno hiperbólico
  tanh(x)   % Tangente hiperbólica

- Exponenciales y logarítmicas:
  exp(x)    % Exponencial (e^x)
  log(x)    % Logaritmo natural (base e)
  log10(x)  % Logaritmo base 10
  log2(x)   % Logaritmo base 2
  sqrt(x)   % Raíz cuadrada

- Otras:
  abs(x)    % Valor absoluto
  factorial(x) % Factorial
  mod(a,b)  % Módulo
  rem(a,b)  % Resto de división
  round(x)  % Redondeo al entero más cercano
  floor(x)  % Redondeo hacia abajo
  ceil(x)   % Redondeo hacia arriba

2. OPERADORES
-------------
- Aritméticos:
  +   % Suma
  -   % Resta
  *   % Multiplicación
  /   % División
  ^   % Potenciación
  .*  % Multiplicación elemento a elemento (vectores)
  ./  % División elemento a elemento
  .^  % Potenciación elemento a elemento

- Relacionales:
  ==  % Igualdad
  !=  % Desigualdad
  <   % Menor que
  >   % Mayor que
  <=  % Menor o igual que
  >=  % Mayor o igual que

- Lógicos:
  &   % AND
  |   % OR
  ~   % NOT
  xor % XOR

3. REPRESENTACIÓN DE FUNCIONES
------------------------------
- Funciones anónimas:
  f = @(x) x^2 + sin(x) - exp(x)

- Funciones en archivos .m:
  function y = mi_funcion(x)
    y = log(x) + cos(x);
  end

- Evaluación de funciones:
  f(2.5)   % Evalúa la función en x=2.5

4. GRÁFICAS DE FUNCIONES
------------------------
- Gráfica básica:
  fplot(@(x) sin(x).*exp(-x/5), [0, 20])
  grid on
  title('Función amortiguada')
  xlabel('x')
  ylabel('f(x)')

- Varias funciones:
  x = linspace(0, 2*pi, 100);
  plot(x, sin(x), 'r', x, cos(x), 'b--')
  legend('seno', 'coseno')

5. CONSTANTES IMPORTANTES
-------------------------
pi      % 3.141592...
eps     % Precisión de máquina
inf     % Infinito
NaN     % No es un número
i, j    % Unidad imaginaria

6. EJEMPLOS COMPUESTOS
----------------------
- Función con múltiples operaciones:
  f = @(x) log10(x+1) + 2*cos(pi*x/2) - sqrt(x)

- Sistema de ecuaciones:
  f1 = @(x,y) x.^2 + y.^2 - 4;
  f2 = @(x,y) exp(x) + y - 2;

7. REPRESENTACIÓN Y OPERACIONES CON MATRICES
--------------------------------------------
- Creación de matrices:
  A = [1, 2, 3; 4, 5, 6; 7, 8, 9]  % Matriz 3x3
  B = zeros(3,2)    % Matriz 3x2 de ceros
  C = ones(4)       % Matriz 4x4 de unos
  D = eye(3)        % Matriz identidad 3x3
  E = rand(2,4)     % Matriz 2x4 con valores aleatorios [0,1]
  F = diag([1 2 3]) % Matriz diagonal con vector [1,2,3]

- Acceso a elementos:
  A(2,3)    % Elemento fila 2, columna 3
  A(:,2)    % Toda la columna 2
  A(1,:)    % Toda la fila 1
  A(1:2,2:3)% Submatriz con filas 1-2 y columnas 2-3

- Operaciones matriciales:
  A + B     % Suma (matrices del mismo tamaño)
  A - B     % Resta
  A * B     % Multiplicación matricial
  A .* B    % Multiplicación elemento a elemento
  A'        % Transpuesta
  A'        % Transpuesta conjugada (hermitiana)
  inv(A)    % Inversa (para matrices cuadradas no singulares)
  det(A)    % Determinante
  trace(A)  % Traza (suma diagonal principal)
  rank(A)   % Rango de la matriz

- Funciones útiles para matrices:
  size(A)   % Dimensiones de la matriz [filas, columnas]
  length(A) % Longitud del vector o mayor dimensión de la matriz
  numel(A)  % Número total de elementos
  sum(A)    % Suma por columnas
  sum(A,2)  % Suma por filas
  prod(A)   % Producto por columnas
  mean(A)   % Media por columnas
  max(A)    % Máximo por columnas
  min(A)    % Mínimo por columnas

- Álgebra lineal:
  eig(A)    % Autovalores y autovectores
  svd(A)    % Descomposición en valores singulares
  chol(A)   % Factorización de Cholesky
  lu(A)     % Factorización LU
  qr(A)     % Factorización QR
  norm(A)   % Norma matricial
  cond(A)   % Número de condición

- Matrices especiales:
  hilb(4)   % Matriz de Hilbert 4x4
  pascal(5) % Matriz de Pascal 5x5
  magic(3)  % Cuadrado mágico 3x3
  toeplitz([1 2 3 4]) % Matriz Toeplitz

8. EJEMPLOS CON MATRICES
------------------------
- Resolver sistema lineal Ax = b:
  A = [3, 1; 1, 2];
  b = [9; 8];
  x = A\b    % Solución del sistema

- Multiplicación matricial vs elemento a elemento:
  A = [1, 2; 3, 4];
  B = [5, 6; 7, 8];
  C = A * B   % Multiplicación matricial
  D = A .* B  % Multiplicación elemento a elemento

- Crear matriz a partir de función:
  f = @(i,j) 1/(i+j-1);
  A = arrayfun(f, ones(3,1)*(1:3), (1:3)'*ones(1,3))

- Diagonalización de matrices:
  A = [4, 1; 1, 4];
  [V, D] = eig(A) % V autovectores, D autovalores diagonales
=============================================
NOTAS:
- Para operaciones con vectores, usar . antes del operador (.*, ./)
- Las funciones trigonométricas usan radianes por defecto
- Para grados, convertir: sind(x), cosd(x), etc.
=============================================

=============================================
NOTAS ADICIONALES SOBRE MATRICES:
- Para matrices grandes, usar funciones sparse para matrices dispersas
- Las operaciones con ' operan sobre matrices complejas correctamente
- Para potencia matricial usar A^n, para potencia elemento a elemento A.^n
- eye(m,n) crea matriz identidad rectangular con m filas y n columnas
=============================================